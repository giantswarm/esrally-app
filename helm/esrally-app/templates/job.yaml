apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}"
    spec:
      serviceAccountName: "{{ .Release.Name }}"
      securityContext:
        runAsUser: {{ .Values.securityContext.userID }}
        runAsGroup: {{ .Values.securityContext.groupID }}
      containers:
      - name: esrally
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:v1.0.1"
        command:
        - sh
        - -c
        - |
          set -o errexit ; set -o xtrace ; set -o nounset

          if [[ ! -z $USERNAME ]]; then
            esrally --pipeline=benchmark-only --target-hosts=$TARGET_HOST \
              --track=$TRACK --report-format=$REPORT_FORMAT \
              --client-options="basic_auth_user:'$USERNAME',basic_auth_password:'$USER_PASSWORD'" 2>&1
          else
            esrally --pipeline=benchmark-only --target-hosts=$TARGET_HOST \
            --track=$TRACK --report-format=$REPORT_FORMAT 2>&1
          fi
        env:
        - name: TARGET_HOST
          value: "opendistro-es-client-service:9200"
        - name: TRACK
          value: "percolator"
        - name: REPORT_FORMAT
          value: "markdown"
        - name: USERNAME
          value: "admin"
        - name: USER_PASSWORD
          value: "admin"
        volumeMounts:
        - name: "{{ .Release.Name }}"
          mountPath: /home/esrally/.rally/rally.ini
          subPath: rally.ini
      volumes:
      - name: "{{ .Release.Name }}"
        configMap:
          name: "{{ .Release.Name }}"
          items:
          - key: rally.ini
            path: rally.ini
      restartPolicy: Never
  backoffLimit: 4
